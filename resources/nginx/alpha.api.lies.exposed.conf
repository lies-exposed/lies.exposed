server {
    listen 80;
    # listen [::]:80 default_server ipv6only=on;
    server_name alpha.api.lies.exposed;
    server_tokens off;

    location ~ /\.well-known/acme-challenge/ {

        allow all;

        root /var/www/letsencrypt;

        try_files $uri =404;

        break;

    }

    return 301 https://$host$request_uri;


}

server {
    # Enable HTTP/2
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name alpha.api.lies.exposed;

    # Use the Let’s Encrypt certificates
    ssl_certificate /etc/letsencrypt/live/alpha.api.lies.exposed/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/alpha.api.lies.exposed/privkey.pem; # managed by Certbot

    # Include the SSL configuration from cipherli.st
    include /etc/nginx/snippets/ssl-params.conf;

    access_log /var/log/nginx/alpha.api.lies.exposed/access.log;
    error_log /var/log/nginx/alpha.api.lies.exposed/error.log;

    client_max_body_size 3G;

    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://127.0.0.1:4010/;
        proxy_ssl_session_reuse off;
        proxy_set_header Host $http_host;
        proxy_cache_bypass $http_upgrade;
        proxy_redirect off;
    }

}

server {
    # Enable HTTP/2
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name tg.lies.exposed;

    # Use the Let’s Encrypt certificates
    ssl_certificate /etc/letsencrypt/live/alpha.api.lies.exposed/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/alpha.api.lies.exposed/privkey.pem; # managed by Certbot

    # Include the SSL configuration from cipherli.st
    include /etc/nginx/snippets/ssl-params.conf;

    client_max_body_size 3G;

    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://127.0.0.1:8081/;
        proxy_ssl_session_reuse off;
        proxy_set_header Host $http_host;
        proxy_cache_bypass $http_upgrade;
        proxy_redirect off;
    }

}
