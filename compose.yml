services:
  db-test.liexp.dev:
    image: postgres:14
    ports:
      - "127.0.0.1:9432:5432"
    environment:
      POSTGRES_USER: liexp
      POSTGRES_PASSWORD: liexp-password
      POSTGRES_DB: liexp-test

  db.liexp.dev:
    image: postgres:14
    ports:
      - "127.0.0.1:8432:5432"
    environment:
      POSTGRES_USER: liexp
      POSTGRES_PASSWORD: liexp-password
      POSTGRES_DB: liexp
      VIRTUAL_HOST: db.liexp.dev
      VIRTUAL_PORT: 5432
    restart: on-failure
    volumes:
      - ./services/api/db/dump:/docker-entrypoint-initdb.d
      - db-data:/var/lib/postgresql/data
    networks:
      - reverseproxy

  fra1.space.liexp.dev:
    image: minio/minio:latest
    command: server --console-address ":9001" /data
    ports:
      - "127.0.0.1:9000:9000"
      - "127.0.0.1:9001:9001"
    environment:
      MINIO_ROOT_USER: space-access-key-id
      MINIO_ROOT_PASSWORD: space-access-key-secret-id
      VIRTUAL_HOST: fra1.space.liexp.dev
      VIRTUAL_PORT: 9000
    volumes:
      - space-data:/data
    restart: on-failure
    networks:
      - reverseproxy
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://fra1.space.liexp.dev:9000/minio/health/live"]
    #   interval: 10s
    #   timeout: 20s
    #   retries: 3

  api-base:
    build:
      context: .
      target: dev
      dockerfile: api.Dockerfile
    env_file:
      - ./services/api/.env
      - ./services/api/.env.local
    environment:
      NODE_ENV: development
      DEBUG: "@liexp*"
      DB_HOST: db.liexp.dev
      DB_PORT: 5432
      SERVER_PORT: 80
    depends_on:
      - db.liexp.dev
      - fra1.space.liexp.dev
    volumes:
      - api-node-modules:/usr/src/app/node_modules
      - ./packages/@liexp:/usr/src/app/packages/@liexp:ro
      - ./services/api:/usr/src/app/services/api:cached
      - ./services/api/temp:/usr/src/app/services/api/temp:rw
    tty: true
    stdin_open: true
    working_dir: /usr/src/app/services/api

  api.liexp.dev:
    extends: api-base
    depends_on:
      - db.liexp.dev
      - fra1.space.liexp.dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://api.liexp.dev/v1/healthcheck"]
      interval: 10s
      timeout: 20s
      retries: 10
      start_period: 15s
    command: pnpm docker:dev
    restart: always
    mem_limit: 1G
    networks:
      - reverseproxy

  worker.liexp.dev:
    extends: api-base
    command: pnpm docker:worker-dev
    environment:
      TG_BOT_POLLING: "false"
    mem_limit: 512M

  liexp.dev:
    build:
      context: .
      target: dev
      dockerfile: web.Dockerfile
    env_file:
      - ./services/web/.env
    ports:
      # hmr port
      - "127.0.0.1:24678:24678"
    volumes:
      - web-node-modules:/usr/src/app/node_modules
      - ./tsconfig.json:/usr/src/app/tsconfig.json
      - ./packages/@liexp:/usr/src/app/packages/@liexp:ro
      - ./services/web:/usr/src/app/services/web:cached
    working_dir: /usr/src/app/services/web
    command: pnpm docker:dev
    mem_limit: 2G
    tty: true
    stdin_open: true
    depends_on:
      - api.liexp.dev
      - fra1.space.liexp.dev
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://liexp.dev/healthcheck"]
    #   interval: 10s
    #   timeout: 20s
    #   retries: 10
    #   start_period: 15s
    networks:
      - reverseproxy

  admin.liexp.dev:
    build:
      context: .
      target: dev
      dockerfile: adminWeb.Dockerfile
    env_file:
      - ./services/admin-web/.env
    volumes:
      - admin-node-modules:/usr/src/app/node_modules
      - ./tsconfig.json:/usr/src/app/tsconfig.json
      - ./packages/@liexp:/usr/src/app/packages/@liexp:ro
      - ./services/admin-web:/usr/src/app/services/admin-web:cached
    working_dir: /usr/src/app/services/admin-web
    command: pnpm docker:dev
    tty: true
    depends_on:
      - liexp.dev
      - api.liexp.dev
      - fra1.space.liexp.dev
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://liexp.dev:4001/"]
    #   interval: 10s
    #   timeout: 20s
    #   retries: 10
    #   start_period: 15s
    networks:
      - reverseproxy

volumes:
  db-data: {}
  api-node-modules: {}
  web-node-modules: {}
  admin-node-modules: {}
  space-data: {}

networks:
  reverseproxy:
    external: true
