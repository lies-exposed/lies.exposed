version: "3.7"

services:
  base:
    build:
      context: .
      target: build
    scale: 0

  db-test:
    image: postgres:12
    ports:
      - "127.0.0.1:9432:5432"
    environment:
      POSTGRES_USER: econnessione
      POSTGRES_PASSWORD: econnessione-password
      POSTGRES_DB: econnessione-test
    volumes:
      - db-test-data:/var/lib/postgresql/data

  db:
    image: postgres:12
    ports:
      - "8432:5432"
    expose:
      - "8432"
    environment:
      POSTGRES_USER: econnessione
      POSTGRES_PASSWORD: econnessione-password
      POSTGRES_DB: econnessione
    volumes:
      - ./services/api/db/dump/:/docker-entrypoint-initdb.d/
      - db-data:/var/lib/postgresql/data

  api:
    container_name: econnessione-api
    image: econnessione_base
    env_file:
      - .env.local
      # - .env.alpha
    environment:
      DEBUG: "@eco*"
      DB_HOST: db
      DB_PORT: 5432
      DEV_DATA_HOST: http://space:9000
    depends_on:
      - db
      - space
    ports:
      - "4010:4010"
    volumes:
      - ./packages/@econnessione:/app/packages/@econnessione
      - ./services/api:/app/services/api
    tty: true
    stdin_open: true
    working_dir: /app/services/api
    command: yarn develop
    restart: always

  web:
    container_name: econnessione-web
    image: econnessione_base
    env_file:
      - ./services/web/.env.local
    environment:
      SKIP_PREFLIGHT_CHECK: "true"
      DISABLE_ESLINT_PLUGIN: "true"
    ports:
      - "4000:4000"
    volumes:
      - ./.eslintrc:/app/.eslintrc
      - ./tsconfig.json:/app/tsconfig.json
      - ./packages/@econnessione:/app/packages/@econnessione:delegated
      - ./services/web:/app/services/web:delegated
    working_dir: /app/services/web
    command: yarn start
    tty: false
    links:
      - api
      - space
    depends_on:
      - space

  admin-web:
    container_name: econnessione-admin-web
    image: econnessione_base
    env_file:
      - ./services/admin-web/.env.local
    environment:
      SKIP_PREFLIGHT_CHECK: "true"
      DISABLE_ESLINT_PLUGIN: "true"
    ports:
      - "4001:4001"
    volumes:
      - ./.eslintrc:/app/.eslintrc
      - ./tsconfig.json:/app/tsconfig.json
      - ./packages/@econnessione:/app/packages/@econnessione:delegated
      - ./services/admin-web:/app/services/admin-web:delegated
    working_dir: /app/services/admin-web
    command: yarn start
    tty: false
    links:
      - api

  storybook:
    container_name: econnessione-storybook
    image: econnessione_base
    ports:
      - "6006:6006"
    volumes_from:
      - web
    volumes:
      - ./services/storybook:/app/services/storybook:delegated
    working_dir: /app/services/storybook
    command: yarn start
    tty: false

  space:
    image: minio/minio
    command: server --console-address ":9001" /data
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: space-access-key-id
      MINIO_ROOT_PASSWORD: space-access-key-secret-id
    volumes:
      - ./services/data/buckets:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

volumes:
  db-data: {}
  db-test-data: {}
  node_modules: {}
  api-node_modules: {}
  web-node_modules: {}
  admin-web-node_modules: {}
  space-data:

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.57.0/24
