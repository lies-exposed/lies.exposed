{
  "name": "api",
  "author": "Andrea Ascari <dev.ascariandrea@gmail.com>",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "clean": "rm -rf build",
    "start": "node bin/run.js",
    "develop": "DOTENV_CONFIG_PATH=../../.env ts-node src/run.ts",
    "develop:alpha": "DOTENV_CONFIG_PATH=../../.env.alpha ts-node-dev src/run.ts",
    "build": "tsc -b ./tsconfig.build.json",
    "watch": "tsc -b ./tsconfig.build.json --watch",
    "lint": "eslint --ext .js,.jsx,.ts,.tsx src/",
    "format": "prettier --write \"src/**/*.{ts,tsx,json,md}\"",
    "test": "jest",
    "test:e2e": "jest e2e",
    "test:spec": "jest spec",
    "ts:node": "ts-node -r dotenv/config -r tsconfig-paths/register",
    "create-pages": "yarn ts:node ./scripts/create-pages.ts",
    "db:dump": "yarn ts:node ./src/scripts/database.dump.ts",
    "db:dump:alpha": "DOTENV_CONFIG_PATH=../../.env.alpha yarn db:dump -p alpha",
    "db:diagram": "ts-node -r tsconfig-paths/register -T ./node_modules/.bin/typeorm-uml ormconfig.js -D LR -d ./data/media/docs/diagrams/typeorm-uml.png",
    "typeorm": "typeorm-ts-node-esm",
    "schema:log": "typeorm schema:log -d ./ormconfig.js",
    "migration:gen": "typeorm migration:generate -d ./ormconfig.js",
    "migration:run": "typeorm migration:run -d ./ormconfig.js",
    "migration:show": "typeorm migration:show -d ./ormconfig.js",
    "migration:revert": "typeorm migration:revert -d ./ormconfig.js",
    "create-event-stats": "DOTENV_CONFIG_PATH=../../.env yarn ts:node ./bin/create-event-stats.ts",
    "parse-tg-message": "DOTENV_CONFIG_PATH=../../.env yarn ts:node ./bin/parse-tg-message.ts",
    "clean-tg-messages": "DOTENV_CONFIG_PATH=../../.env yarn ts:node ./bin/clean-tg-messages.ts",
    "extract-events": "DOTENV_CONFIG_PATH=../../.env yarn ts:node ./bin/extract-events.ts"
  },
  "dependencies": {
    "@databases/escape-identifier": "^1.0.3",
    "@databases/pg": "^5.4.1",
    "aws-sdk": "^2.1248.0",
    "axios": "^0.27.2",
    "canvas": "^2.11.0",
    "cors": "2.8.5",
    "debug": "^4.3.4",
    "domino": "^2.1.6",
    "express": "^4.18.2",
    "express-jwt": "^8.3.0",
    "fast-csv": "^4.3.6",
    "fluent-ffmpeg": "^2.1.2",
    "form-data": "^4.0.0",
    "fp-ts": "^2.13.1",
    "front-matter": "4.0.2",
    "gray-matter": "^4.0.3",
    "io-ts": "^2.2.20",
    "io-ts-types": "^0.5.19",
    "jsonwebtoken": "^9.0.0",
    "module-alias": "^2.2.2",
    "multer": "^1.4.5-lts.1",
    "node-cron": "^3.0.2",
    "node-telegram-bot-api": "^0.61.0",
    "page-metadata-parser": "^1.1.4",
    "pdfjs-dist": "^3.2.146",
    "pg": "^8.8.0",
    "puppeteer-core": "^19.5.2",
    "ts-endpoint-express": "^2.0.0",
    "ts-shared": "2.0.0-alpha.6",
    "typeorm": "^0.3.11",
    "uuid": "^8.3.2"
  },
  "devDependencies": {
    "@swc/core": "^1.3.24",
    "@swc/jest": "^0.2.24",
    "@types/body-parser": "^1.19.2",
    "@types/cors": "^2.8.13",
    "@types/debug": "^4.1.7",
    "@types/eslint": "^8.4.10",
    "@types/express": "^4.17.15",
    "@types/express-jwt": "^7.4.2",
    "@types/fluent-ffmpeg": "^2.1.20",
    "@types/jest": "^29.2.5",
    "@types/jsonwebtoken": "^9.0.0",
    "@types/module-alias": "^2.0.1",
    "@types/multer": "^1.4.7",
    "@types/node": "^16.18.11",
    "@types/node-cron": "^3.0.7",
    "@types/node-telegram-bot-api": "^0.57.6",
    "@types/pg": "^8.6.6",
    "@types/supertest": "^2.0.12",
    "@types/uuid": "^8.3.4",
    "eslint": "^8.32.0",
    "eslint-config-prettier": "^8.6.0",
    "eslint-import-resolver-typescript": "^3.5.3",
    "eslint-plugin-import": "^2.27.5",
    "jest": "^29.3.1",
    "nodemon": "^2.0.20",
    "prettier": "^2.8.3",
    "supertest": "^6.3.3",
    "ts-jest": "^29.0.5",
    "ts-node": "^10.9.1",
    "ts-node-dev": "^2.0.0",
    "typeorm-uml": "^1.6.5",
    "typescript": "^4.9.4"
  },
  "_moduleAliases": {
    "@io": "build/io",
    "@entities": "build/entities",
    "@flows": "build/flows",
    "@routes": "build/routes",
    "@utils": "build/utils",
    "@liexp/core": "../../packages/@liexp/core/lib",
    "@liexp/shared": "../../packages/@liexp/shared/lib"
  },
  "license": "MIT",
  "lint-staged": {
    "src/**/*.(ts|tsx|js|jsx)": "eslint --fix",
    "src/**/*.+(ts|tsx|js|jsx|json|css)": [
      "prettier --write"
    ]
  }
}
