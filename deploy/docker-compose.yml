version: "3"

services:

  api:
    image: ghcr.io/lies-exposed/liexp-api:alpha-latest
    container_name: liexp-api
    user: $API_UID:$API_GID
    env_file:
      - .env.api
    ports:
      - "4010:4010"
    expose:
      - "4010"
    volumes:
      # - ../services/api/certs/:/app/services/api/certs/:ro
      - ./certs/:/app/services/api/certs/:ro
      - ./temp/:/app/services/api/temp/:rw
      - ./config/:/app/services/api/config/:rw
    working_dir: /app/services/api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4010/v1/healthcheck"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 30s
    command: yarn start
    restart: always
    logging:
      driver: "json-file"
      options:
          max-file: 5
          max-size: 10m

  web:
    image: ghcr.io/lies-exposed/liexp-web:alpha-latest
    container_name: liexp-web
    env_file:
      - .env.web
    environment:
      API_URL: http://api:4010/v1
      ADMIN_URL: https://alpha.lies.exposed/admin
    ports:
      - "4020:4020"
    links:
      - api
    working_dir: /app/services/web
    command: yarn serve
    restart: always
    logging:
      driver: "json-file"
      options:
          max-file: 5
          max-size: 10m

  telegram-bot-api:
    image: aiogram/telegram-bot-api:latest
    environment:
      TELEGRAM_API_ID: ${TELEGRAM_API_ID}
      TELEGRAM_API_HASH: ${TELEGRAM_API_HASH}
      TELEGRAM_LOCAL: "true"
    volumes:
      - telegram-bot-api-data:/var/lib/telegram-bot-api
    ports:
      - "8081:8081"
    restart: on-failure
    logging:
      driver: "json-file"
      options:
          max-file: 5
          max-size: 10m

  telegram-bot:
    image: nginx:1.19-alpine
    restart: always
    depends_on:
      - telegram-bot-api
    volumes:
      - telegram-bot-api-data:/var/lib/telegram-bot-api
      - ./deploy/nginx/telegram-bot-api.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "9008:9008"


volumes:
  telegram-bot-api-data: {}