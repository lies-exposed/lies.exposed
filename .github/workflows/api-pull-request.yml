name: API - Pull Request

on:
  pull_request:
    branches:
      - daily
      - release/alpha
      - master
    paths:
      - ".github/workflows/**"
      - "packages/**"
      - "services/api/**"

env:
  API_IMAGE_NAME: liexp-api

jobs:
  pull_request:
    runs-on: ubuntu-latest
    services:
      pg-db:
        image: postgres:12
        env:
          POSTGRES_USER: liexp
          POSTGRES_PASSWORD: liexp-password
          POSTGRES_DB: liexp
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 8432:5432

      pg-db-test:
        image: postgres:12
        env:
          POSTGRES_USER: liexp
          POSTGRES_PASSWORD: liexp-password
          POSTGRES_DB: liexp-test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 9432:5432

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "yarn"
          cache-dependency-path: yarn.lock

      # - uses: actions/cache@v2
      #   with:
      #     path: "**/node_modules"
      #     key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install modules
        run: yarn

      - name: Lint code
        run: yarn api lint

      - name: Build API
        run: |
          yarn packages:build
          yarn api build

      - name: Run migrations
        env:
          DOTENV_CONFIG_PATH: ../../.env
        run: yarn api migration:run

      - name: Run tests
        env:
          DEBUG: "@liexp*"
        run: yarn api jest --ci --runInBand --forceExit --logHeapUsage

      # - name: Log in to registry
        # This is where you will update the personal access token to GITHUB_TOKEN
        # run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

      # - name: Build API image
        # run: docker build . --file api.Dockerfile --tag $API_IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"



