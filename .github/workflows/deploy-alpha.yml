name: Deploy Alpha

on:
  push:
    branches:
      - release/alpha
  # workflow_run:
  #   workflows:
  #     - "Pull Request"
  #   types:
  #     - completed
  #   branches:
  #     - release/alpha

jobs:
  deploy-alpha:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [14.x]

    # if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install modules
        # if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push to GitHub Packages
        uses: docker/build-push-action@v2
        with:
          tags: ascariandrea/econnessione/api@latest
          file: api.Dockerfile
          target: production
          push: true

      - name: SSH Remote Commands
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            docker stop econnessione-api
            docker pull docker.pkg.github.com/ascariandrea/econnessione/api:release-alpha
            docker run -it --env-file .env --volume $(pwd)/certs:/app/services/api/certs -d --name econnessione-db-migrations-run docker.pkg.github.com/ascariandrea/econnessione/api:release-alpha yarn api migration:run
            docker rm econnessione-db-migrations-run
            docker rm econnessione-api
            docker run -it --env-file .env --volume $(pwd)/certs:/app/services/api/certs -p "4010:4010" -d --name econnessione-api docker.pkg.github.com/ascariandrea/econnessione/api:release-alpha yarn api start

      - name: Build Packages
        run: yarn packages:build

      - name: Build Storybook
        run: yarn workspace storybook build

      - name: Upload Storybook to DO Space
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ALPHA_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.ALPHA_SECRET_ACCESS_KEY }}
        run: |
          aws s3 sync ./services/storybook/build s3://econnessione-alpha/storybook \
            --follow-symlinks \
            --delete \
            --endpoint https://fra1.digitaloceanspaces.com/ \
            --acl public-read

      - name: Build Admin Web
        run: yarn workspace admin-web build
        env:
          DISABLE_ESLINT_PLUGIN: true
          SKIP_PREFLIGHT_CHECK: true
          PUBLIC_URL: https://alpha.econnessione.org/admin/
          REACT_APP_API_URL: https://alpha.api.econnessione.org/v1

      - name: Upload Admin Web build to DO Space
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ALPHA_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.ALPHA_SECRET_ACCESS_KEY }}
        run: |
          aws s3 sync ./services/admin-web/build s3://econnessione-alpha/admin \
            --follow-symlinks \
            --delete \
            --endpoint https://fra1.digitaloceanspaces.com/ \
            --acl public-read

      - name: Build Web
        run: yarn workspace web build
        env:
          DISABLE_ESLINT_PLUGIN: true
          SKIP_PREFLIGHT_CHECK: true
          PUBLIC_URL: https://alpha.econnessione.org/web/
          REACT_APP_API_URL: https://alpha.api.econnessione.org/v1

      - name: Upload Web build to DO Space
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ALPHA_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.ALPHA_SECRET_ACCESS_KEY }}
        run: |
          aws s3 sync ./services/web/build s3://econnessione-alpha/web \
            --follow-symlinks \
            --delete \
            --endpoint https://fra1.digitaloceanspaces.com/ \
            --acl public-read

      - name: Upload Public Data to DO Space
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ALPHA_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.ALPHA_SECRET_ACCESS_KEY }}
        run: |
          aws s3 sync ./services/data/public s3://econnessione-alpha/public \
            --follow-symlinks \
            --delete \
            --endpoint https://fra1.digitaloceanspaces.com/ \
            --acl public-read

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.ALPHA_DO_ACCESS_TOKEN }}

      - name: Flush CDN
        run: doctl compute cdn flush fbe4de1b-1ca5-46fd-bd75-c57d56b0e0b8
