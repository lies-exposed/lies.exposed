name: Deploy Alpha

on:
  push:
    branches:
      - release/alpha
  # workflow_run:
  #   workflows:
  #     - "Pull Request"
  #   types:
  #     - completed
  #   branches:
  #     - release/alpha

jobs:
  deploy-alpha:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [14.x]

    # if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - uses: actions/checkout@v2

      - name: Install modules
        # if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push to GitHub Packages
        uses: docker/build-push-action@v2
        with:
          tags: ghcr.io/ascariandrea/econnessione/api:release-alpha
          file: api.Dockerfile
          target: production
          push: true

      - name: SSH Remote Commands
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script_stop: true
          script: |
            cd ~/app
            docker login ghcr.io -u ${{ github.repository_owner }} -p ${{ secrets.GITHUB_TOKEN }}
            docker-compose down
            docker system prune
            docker-compose pull
            docker-compose up migration
            docker-compose down
            docker-compose up -d api

      - name: Build Packages
        run: yarn packages:build

      - name: Build Storybook
        run: yarn workspace storybook build

      - name: Upload Storybook to DO Space
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ALPHA_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.ALPHA_SECRET_ACCESS_KEY }}
        run: |
          aws s3 sync ./services/storybook/build s3://econnessione-alpha/storybook \
            --follow-symlinks \
            --delete \
            --endpoint https://fra1.digitaloceanspaces.com/ \
            --acl public-read \
            --region fra1

      - name: Build Admin Web
        run: yarn workspace admin-web build
        env:
          NODE_ENV: production
          PUBLIC_URL: https://alpha.econnessione.org/admin/
          API_URL: https://alpha.api.econnessione.org/v1

      - name: Upload Admin Web build to DO Space
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ALPHA_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.ALPHA_SECRET_ACCESS_KEY }}
        run: |
          aws s3 sync ./services/admin-web/build s3://econnessione-alpha/admin \
            --follow-symlinks \
            --delete \
            --endpoint https://fra1.digitaloceanspaces.com/ \
            --acl public-read \
            --region fra1

      - name: Build Web
        run: yarn workspace web build
        env:
          NODE_ENV: production
          PUBLIC_URL: https://alpha.econnessione.org/web/
          API_URL: https://alpha.api.econnessione.org/v1

      - name: Upload Web build to DO Space
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ALPHA_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.ALPHA_SECRET_ACCESS_KEY }}
        run: |
          aws s3 sync ./services/web/build s3://econnessione-alpha/web \
            --follow-symlinks \
            --delete \
            --endpoint https://fra1.digitaloceanspaces.com/ \
            --acl public-read \
            --region fra1

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.ALPHA_DO_ACCESS_TOKEN }}

      - name: Flush CDN
        run: doctl compute cdn flush fbe4de1b-1ca5-46fd-bd75-c57d56b0e0b8
